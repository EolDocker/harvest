diff --git a/.ruby-gemset b/.ruby-gemset
deleted file mode 100644
index 444edc6..0000000
--- a/.ruby-gemset
+++ /dev/null
@@ -1 +0,0 @@
-eol_php_code
diff --git a/.ruby-version b/.ruby-version
deleted file mode 100644
index 2aaf252..0000000
--- a/.ruby-version
+++ /dev/null
@@ -1 +0,0 @@
-ruby-1.9.3-p392
diff --git a/app/models/Resources.php b/app/models/Resources.php
index fbd3ce4..b89a954 100644
--- a/app/models/Resources.php
+++ b/app/models/Resources.php
@@ -180,7 +180,8 @@ class Resource extends ActiveRecord
         $extra_hours_clause = "";
         if($hours_ahead_of_time) $extra_hours_clause = " - $hours_ahead_of_time";
 
-        $result = $mysqli->query("SELECT SQL_NO_CACHE id FROM resources WHERE resource_status_id=".ResourceStatus::force_harvest()->id." OR (harvested_at IS NULL AND (resource_status_id=".ResourceStatus::validated()->id." OR resource_status_id=".ResourceStatus::validation_failed()->id." OR resource_status_id=".ResourceStatus::processing_failed()->id.")) OR (refresh_period_hours!=0 AND DATE_ADD(harvested_at, INTERVAL (refresh_period_hours $extra_hours_clause) HOUR)<=NOW() AND resource_status_id IN (".ResourceStatus::upload_failed()->id.", ".ResourceStatus::validated()->id.", ".ResourceStatus::validation_failed()->id.", ". ResourceStatus::processed()->id .", ".ResourceStatus::processing_failed()->id.", ".ResourceStatus::published()->id."))"); // WAIT: ORDER BY position ASC");
+        // $result = $mysqli->query("SELECT SQL_NO_CACHE id FROM resources WHERE resource_status_id=".ResourceStatus::force_harvest()->id." OR (harvested_at IS NULL AND (resource_status_id=".ResourceStatus::validated()->id." OR resource_status_id=".ResourceStatus::validation_failed()->id." OR resource_status_id=".ResourceStatus::processing_failed()->id.")) OR (refresh_period_hours!=0 AND DATE_ADD(harvested_at, INTERVAL (refresh_period_hours $extra_hours_clause) HOUR)<=NOW() AND resource_status_id IN (".ResourceStatus::upload_failed()->id.", ".ResourceStatus::validated()->id.", ".ResourceStatus::validation_failed()->id.", ". ResourceStatus::processed()->id .", ".ResourceStatus::processing_failed()->id.", ".ResourceStatus::published()->id."))"); // WAIT: ORDER BY position ASC");
+        $result = $mysqli->query("SELECT SQL_NO_CACHE id FROM resources WHERE resource_status_id=".ResourceStatus::force_harvest()->id." OR (harvested_at IS NULL AND (resource_status_id=".ResourceStatus::validated()->id." OR resource_status_id=".ResourceStatus::validation_failed()->id." OR resource_status_id=".ResourceStatus::processing_failed()->id."))"); // WAIT: ORDER BY position ASC");
         while($result && $row=$result->fetch_assoc())
         {
             $resources[] = $resource = Resource::find($row["id"]);
diff --git a/applications/xls2dwca/form_result.php b/applications/xls2dwca/form_result.php
index 4daa2c4..ba36708 100644
--- a/applications/xls2dwca/form_result.php
+++ b/applications/xls2dwca/form_result.php
@@ -5,7 +5,6 @@ include_once(dirname(__FILE__) . "/../../config/environment.php");
 $url = $_REQUEST['url'];
 $upload = $_FILES["file_upload"];
 
-
 $suffix = null;
 if(@$upload['tmp_name'])
 {
@@ -13,53 +12,73 @@ if(@$upload['tmp_name'])
     if(preg_match("/\.([^\.]+)$/", $upload['name'], $arr)) $suffix = strtolower(trim($arr[1]));
 }
 
-
 $final_archive_gzip_url = null;
 $errors = array();
 if($url)
 {
+    debug("Cmgr: have url");
     if($temp_dir = ContentManager::download_temp_file_and_assign_extension($url, $suffix, array('suffix' => $suffix, 'timeout' => 900))) //15 minutes timeout (900 seconds)
     {
+        debug("Cmgr: have temp dir");
         if(is_dir($temp_dir))
         {
+            debug("Cmgr: is a directory (s/b file)");
             $errors[] = "The file provided is not an Excel file";
             recursive_rmdir($temp_dir);
         }else
         {
+            debug("Cmgr: is file");
             $path_parts = pathinfo($temp_dir);
             $extension = @$path_parts['extension'];
             $archive_tmp_dir = @$path_parts['dirname'] ."/". @$path_parts['filename'];
             if($extension == 'xlsx' || $extension == 'xls')
             {
+                debug("Cmgr: is Excel");
                 require_library('ExcelToText');
                 $archive_converter = new ExcelToText($temp_dir);
                 if($archive_converter->errors())
                 {
+                    debug("Cmgr: has errors");
                     $errors = $archive_converter->errors();
                 }elseif($archive_converter->is_new_schema_spreadsheet())
                 {
+                    debug("Cmgr: new schema spreadsheet");
                     $archive_tmp_dir = $archive_converter->convert_to_new_schema_archive();
                     if($archive_converter->errors())
                     {
+                        debug("Cmgr: has errors");
                         $errors = $archive_converter->errors();
                         recursive_rmdir($archive_tmp_dir);
                     }else
                     {
+                        debug("Cmgr: no errors");
                         if(preg_match("/\/(dwca_[0-9]+)$/", $archive_tmp_dir, $arr))
                         {
+                            debug("Cmgr: DWCA");
                             $final_archive_gzip_url = WEB_ROOT . "tmp/" . $arr[1] . ".tar.gz";
                         }
                     }
-                }else $errors[] = "Unable to determine the template of the provided Excel file. Are you sure this matches the EOL template provided at https://dl.dropboxusercontent.com/u/1355101/schema/eol_import_spreadsheet.xlsx ?";
+                }else {
+                    debug("Cmgr: NOT a schema spreadsheet");
+                    $errors[] = "Unable to determine the template of the provided Excel file. Are you sure this matches the EOL template provided at https://dl.dropboxusercontent.com/u/1355101/schema/eol_import_spreadsheet.xlsx ?";
+                }
             }else $errors[] = "The file provided is not an Excel file";
             unlink($temp_dir);
         }
     }else
     {
+        debug("CMgr: No temp dir!");
         $errors[] = "There was a problem with the uploaded $suffix file.";
     }
 }else $errors[] = "No file was provided";
 
+debug("Cmgr: done parsing file");
+?>
+<html>
+<body>
+<h1>Conversion Results</h1>
+<p>
+<?php
 
 if($final_archive_gzip_url)
 {
@@ -84,3 +103,11 @@ if($final_archive_gzip_url)
 }
 
 ?>
+</p>
+</body>
+</html>
+<?php
+flush();
+ob_flush();
+exit(0);
+?>
diff --git a/config/boot.php b/config/boot.php
index 67fc207..65ec0c1 100644
--- a/config/boot.php
+++ b/config/boot.php
@@ -44,7 +44,7 @@ if(!isset($GLOBALS['ENV_USE_MYSQL'])) $GLOBALS['ENV_USE_MYSQL'] = true;
 if(!isset($GLOBALS['ENV_MYSQL_DEBUG']))         $GLOBALS['ENV_MYSQL_DEBUG'] = false;
 if(!isset($GLOBALS['ENV_DEBUG']))               $GLOBALS['ENV_DEBUG'] = false;
 if(!isset($GLOBALS['ENV_DEBUG_TO_FILE']))       $GLOBALS['ENV_DEBUG_TO_FILE'] = false;
-if(!isset($GLOBALS['ENV_DEBUG_FILE']))          $GLOBALS['ENV_DEBUG_FILE'] = DOC_ROOT . 'log/' . $GLOBALS['ENV_NAME'] . '.log';
+if(!isset($GLOBALS['ENV_DEBUG_FILE']))          $GLOBALS['ENV_DEBUG_FILE'] = '/eol/log/production.log'; // ARGH
 if(!isset($GLOBALS['ENV_DEBUG_FILE_FLUSH']))    $GLOBALS['ENV_DEBUG_FILE_FLUSH'] = true;
 if(!isset($GLOBALS['ENV_MYSQL_READ_ONLY']))     $GLOBALS['ENV_MYSQL_READ_ONLY'] = false;
 if(!isset($GLOBALS['ENV_MYSQL_ONLY_MASTER']))   $GLOBALS['ENV_MYSQL_ONLY_MASTER'] = false;
diff --git a/config/environment.php b/config/environment.php
index 804789f..4e8b6cc 100644
--- a/config/environment.php
+++ b/config/environment.php
@@ -6,14 +6,15 @@ if(!isset($GLOBALS['DEFAULT_TIMEZONE'])) $GLOBALS['DEFAULT_TIMEZONE'] = 'America
 date_default_timezone_set($GLOBALS['DEFAULT_TIMEZONE']);  // Required by resque...

 /* best to leave the PHP settings at the top in case they are overridden in another environment */
-ini_set('memory_limit', '1024M'); // 1GB maximum memory usage
-ini_set('max_execution_time', '21600'); // 6 hours
-ini_set('display_errors', false);
+ini_set('memory_limit', '15360M'); // 15GB maximum memory usage
+ini_set('max_execution_time', '604800'); // 7 days
+ini_set('display_errors', true);
+

 /* Default Environment */
-if(!isset($GLOBALS['ENV_NAME'])) $GLOBALS['ENV_NAME'] = 'development';
+if(!isset($GLOBALS['ENV_NAME'])) $GLOBALS['ENV_NAME'] = 'production';
 // passing in the CLI arguments
-set_and_load_proper_environment($argv);
+@set_and_load_proper_environment($argv);


 if(!defined('PS_LITE_CMD')) define('PS_LITE_CMD', 'ps -eo uid,pid,ppid,stime,tty,time,command'); // No -f
@@ -24,18 +25,22 @@ if(!defined('GUNZIP_BIN_PATH')) define('GUNZIP_BIN_PATH', 'gunzip');
 if(!defined('UNZIP_BIN_PATH')) define('UNZIP_BIN_PATH', 'unzip');
 if(!defined('TAR_BIN_PATH')) define('TAR_BIN_PATH', 'tar');
 if(!defined('FILE_BIN_PATH')) define('FILE_BIN_PATH', 'file');
+if(!defined('RESQUE_HOST')) define('RESQUE_HOST', '10.252.248.35:6379');

 if(!isset($GLOBALS['ENV_DEBUG'])) $GLOBALS['ENV_DEBUG'] = true;
-if(!isset($GLOBALS['ENV_MYSQL_DEBUG'])) $GLOBALS['ENV_MYSQL_DEBUG'] = true;
-if(!isset($GLOBALS['ENV_DEBUG_TO_FILE'])) $GLOBALS['ENV_DEBUG_TO_FILE'] = false;
+// QUIET PLEASE MAKE IT STOP!
+if(!isset($GLOBALS['ENV_MYSQL_DEBUG'])) $GLOBALS['ENV_MYSQL_DEBUG'] = false;
+if(!isset($GLOBALS['ENV_DEBUG_TO_FILE'])) $GLOBALS['ENV_DEBUG_TO_FILE'] = true;
 if(!isset($GLOBALS['ENV_DEBUG_FILE_FLUSH'])) $GLOBALS['ENV_DEBUG_FILE_FLUSH'] = false;

 if(!isset($GLOBALS['ENV_ENABLE_CACHING'])) $GLOBALS['ENV_ENABLE_CACHING'] = true;

-if(!defined('SPARQL_ENDPOINT')) define("SPARQL_ENDPOINT", "http://localhost:8890/sparql");
-if(!defined('SPARQL_UPLOAD_ENDPOINT')) define("SPARQL_UPLOAD_ENDPOINT", "http://localhost:8890/DAV/home/dba/upload");
+if(!defined('SPARQL_ENDPOINT')) define("SPARQL_ENDPOINT", "http://10.252.248.33:8890/sparql");
+if(!defined('SPARQL_UPLOAD_ENDPOINT')) define("SPARQL_UPLOAD_ENDPOINT", "http://10.252.248.33:8890/DAV/uploads/turtle");
 if(!defined('SPARQL_USERNAME')) define("SPARQL_USERNAME", "dba");
-if(!defined('SPARQL_PASSWORD')) define("SPARQL_PASSWORD", "dba");
+if(!defined('SPARQL_PASSWORD')) define("SPARQL_PASSWORD", "jhfi9348hn");
+
+if(!defined('DOWNLOAD_TIMEOUT_SECONDS'))    define('DOWNLOAD_TIMEOUT_SECONDS', '45');

 /* Initialize app - this should be towards the top of environment.php,
    but declare the WEB_ROOT and caching settings first.
@@ -43,7 +48,7 @@ if(!defined('SPARQL_PASSWORD')) define("SPARQL_PASSWORD", "dba");
 */
 require_once(dirname(__FILE__) . '/boot.php');

-// $GLOBALS['log_file'] = fopen(DOC_ROOT . "temp/processes.log", "a+");
+$GLOBALS['log_file'] = fopen(DOC_ROOT . "temp/processes.log", "a+");



@@ -83,12 +88,12 @@ php_active_record\require_vendor('eol_content_schema_v2');


 /* For content downloading */
-# where harvested media will be downloaded to (must be web accessible)
-if(!defined('CONTENT_LOCAL_PATH'))          define('CONTENT_LOCAL_PATH',            DOC_ROOT . 'applications/content_server/content/');
-# where harvested media will be temporarily stored before being moved the above directory
+# where harvested media will be downloaded to (mnust be web accessible)
+if(!defined('CONTENT_LOCAL_PATH'))          define('CONTENT_LOCAL_PATH',            '/opt/content/');
+# where harvested media will eb temporarily stored before being moved the above directory
 if(!defined('CONTENT_TEMP_PREFIX'))         define('CONTENT_TEMP_PREFIX',           DOC_ROOT . 'applications/content_server/tmp/');
 # where resource XML files will be downloaded to
-if(!defined('CONTENT_RESOURCE_LOCAL_PATH')) define('CONTENT_RESOURCE_LOCAL_PATH',   DOC_ROOT . 'applications/content_server/resources/');
+if(!defined('CONTENT_RESOURCE_LOCAL_PATH')) define('CONTENT_RESOURCE_LOCAL_PATH',   '/opt/resources/');
 if(!defined('CONTENT_GNI_RESOURCE_PATH'))   define('CONTENT_GNI_RESOURCE_PATH',     DOC_ROOT . 'applications/content_server/gni_tcs_files/' # where datasets prepared by app servers will reside (must be web accessible)
 if(!defined('CONTENT_DATASET_PATH'))        define('CONTENT_DATASET_PATH',          DOC_ROOT . 'applications/content_server/datasets/');
@@ -96,8 +101,6 @@ if(!defined('CONTENT_DATASET_PATH'))        define('CONTENT_DATASET_PATH',
 // this may not be needed anymore
 if(!defined('WEB_ROOT')) define('MAGICK_HOME', '/usr/local/ImageMagick/');       // path to ImageMagick home directory

-// Resque:
-if(!defined('RESQUE_HOST')) define('RESQUE_HOST', 'localhost:6379');
 /* table data which will not get cached - there are too many rows */
 $GLOBALS['no_cache']['agents']              = true;
 $GLOBALS['no_cache']['canonical_forms']     = true;
@@ -116,7 +119,6 @@ $GLOBALS['no_cache']['taxon_concept_names'] = true;
 $GLOBALS['no_cache']['taxon_concepts']      = true;


-
 /* Set your working development environment
    if a web request and there is a paremeter ENV_NAME=$ENV that gets priority
    if a CLI request and there is an argument ENV_NAME=$ENV that gets second priority
diff --git a/lib/ArchiveDataIngester.php b/lib/ArchiveDataIngester.php
index b640f6a..b3b6cc3 100644
--- a/lib/ArchiveDataIngester.php
+++ b/lib/ArchiveDataIngester.php
@@ -930,7 +930,7 @@ class ArchiveDataIngester
             self::debug_iterations("Inserting $row_type");
             $this->commit_iterations($row_type, 500);
             # TODO: fix this with validation
-            if(in_array(@$row['http://eol.org/schema/measurementOfTaxon'], $valid_measurement_of_taxon))
+            if(in_array(strtolower(@$row['http://eol.org/schema/measurementOfTaxon']), $valid_measurement_of_taxon))
             {
                 $row['http://eol.org/schema/measurementOfTaxon'] = 'http://eol.org/schema/terms/true';
             }
diff --git a/log/.gitignore b/log/.gitignore
deleted file mode 100644
index e69de29..0000000
diff --git a/rake_tasks/denormalize_tables.php b/rake_tasks/denormalize_tables.php
index 6de8428..258aa5e 100755
--- a/rake_tasks/denormalize_tables.php
+++ b/rake_tasks/denormalize_tables.php
@@ -14,7 +14,7 @@ $sub_log->finished();
 
 shell_exec(PHP_BIN_PATH . dirname(__FILE__)."/flatten_hierarchies.php ENV_NAME=". $GLOBALS['ENV_NAME']);
 // shell_exec(PHP_BIN_PATH . dirname(__FILE__)."/table_of_contents.php ENV_NAME=". $GLOBALS['ENV_NAME']);
-shell_exec(PHP_BIN_PATH . dirname(__FILE__)."/top_images.php ENV_NAME=". $GLOBALS['ENV_NAME']);
+// shell_exec(PHP_BIN_PATH . dirname(__FILE__)."/top_images.php ENV_NAME=". $GLOBALS['ENV_NAME']);
 // shell_exec(PHP_BIN_PATH . dirname(__FILE__)."/random_hierarchy_images.php ENV_NAME=". $GLOBALS['ENV_NAME']);
 shell_exec(PHP_BIN_PATH . dirname(__FILE__)."/create_preferred_entries.php ENV_NAME=". $GLOBALS['ENV_NAME']);
 
diff --git a/rake_tasks/harvest_resources_cron_task.php b/rake_tasks/harvest_resources_cron_task.php
index 751c3e4..160fc8d 100755
--- a/rake_tasks/harvest_resources_cron_task.php
+++ b/rake_tasks/harvest_resources_cron_task.php
@@ -26,61 +26,71 @@ $log = HarvestProcessLog::create(array('process_name' => 'Harvesting'));
 $start_time = time();
 $harvested = array();
 
-while((time() - $start_time)/(60*60) < 10)
+while((time() - $start_time)/(60*60) < 8)
 {
-	//sleep the php until resuming the harvest from the rails side
-	while(Resource::is_paused() == 1)
-		sleep(40);
-	//get the resource and check with the previous one
-	$resource = Resource::get_ready_resource();
-
-	if (is_null($resource))
-		break;
-
-	if (!isset($previous_resource->id))
-		$previous_resource->id = -1;
-
-	if ($previous_resource->id == $resource->id){
-		$resource->harvesting_failed();
-		$previous_resource = $resource;
-		continue;
-	}else{
-		$previous_resource = $resource;
-	}
-
-	$GLOBALS['currently_harvesting_resource_id'] = $resource->id;
-    // IMPORTANT!
-    // We skip a few hard-coded resource IDs, here.
-    // TODO - it would be preferable if this flag were in the DB. ...It looks like using a ResourceStatus could achieve the effect.
-    // TODO - output a warning if a resource gets skipped.
-    if(in_array($resource->id, array(77, 710, 752))) {
-      debug("** SKIPPING hard-coded exception resource " . $resource->id);
-      debug("   (" . $resource->title . ")");
-      $resource->harvesting_failed();
-      continue;
-    }
-    // NOTE that a specified id will get SKIPPED if it's not "ready" for harvesting.
-    if($specified_id && $resource->id != $specified_id) {
-      debug("** SKIPPING non-specified resource " . $resource->id);
-      debug("   (" . $resource->title . ")");
-      $resource->harvesting_failed();
-      continue;
-    };
-    if($GLOBALS['ENV_DEBUG']) echo date("Y-m-d", time()) . "++ START HARVEST " .
-      $resource->id . " (" . $resource->title . ")\n";
-
-    $validate = true;
-    if($GLOBALS['ENV_NAME'] == 'test') $validate = false;
-
-    try {
-      $resource->harvest($validate, false, $fast_for_testing);
-      if($resource->resource_status_id != ResourceStatus::harvesting_failed()->id;) array_push($harvested, $resource->id);
-    } catch (\Exception $e) {
-      if($GLOBALS['ENV_DEBUG']) echo 'Caught exception: ', $e->getMessage(), "\n";
-      $resource->update_hierarchy_entries_count();
-      $resource->harvesting_failed();
-      debug('Caught exception: ', $e->getMessage());
-    }
+  //sleep the php until resuming the harvest from the rails side
+  while(Resource::is_paused() == 1) {
+          debug("Harvesting paused; sleeping");
+          sleep(40);
+        }
+  //get the resource and check with the previous one
+  $resource = Resource::get_ready_resource();
+
+  if (is_null($resource))
+    break;
+
+  if (!isset($previous_resource->id))
+    $previous_resource->id = -1;
+
+  if ($previous_resource->id == $resource->id){
+    $resource->harvesting_failed();
+    $previous_resource = $resource;
+    continue;
+  }else{
+    $previous_resource = $resource;
+  }
+
+  $GLOBALS['currently_harvesting_resource_id'] = $resource->id;
+
+  // See https://github.com/EOL/tramea/issues/186
+  // ids that are allowed:
+  // array(969, 958, 972, 973, 974, 21, 544, 323, 330, 327, 829, 826, 830, 831, 553, 833, 832, 556, 792, 798, 834, 744, 745, 200, 688, 699, 701, 899, 864, 799, 963, 984, 961, 872)
+  if(! in_array($resource->id, array(799))) {
+    debug("** Skipping $resource->id for now...");
+    $resource->harvesting_failed();
+    continue;
+  }
+
+  // IMPORTANT!
+  // We skip a few hard-coded resource IDs, here.
+  // TODO - it would be preferable if this flag were in the DB. ...It looks like using a ResourceStatus could achieve the effect.
+  // TODO - output a warning if a resource gets skipped.
+  if(in_array($resource->id, array(77, 710, 752))) {
+    debug("** SKIPPING hard-coded exception resource " . $resource->id);
+    debug("   (" . $resource->title . ")");
+    $resource->harvesting_failed();
+    continue;
+  }
+  // NOTE that a specified id will get SKIPPED if it's not "ready" for harvesting.
+  if($specified_id && $resource->id != $specified_id) {
+    debug("** SKIPPING non-specified resource " . $resource->id);
+    debug("   (" . $resource->title . ")");
+    $resource->harvesting_failed();
+    continue;
+  };
+  debug("++ START HARVEST " .  $resource->id . " (" . $resource->title . ")\n");
+
+  $validate = true;
+  if($GLOBALS['ENV_NAME'] == 'test') $validate = false;
+
+  try {
+    $resource->harvest($validate, false, $fast_for_testing);
+    array_push($harvested, $resource->id);
+  } catch (\Exception $e) {
+    $resource->update_hierarchy_entries_count();
+    $resource->harvesting_failed();
+    debug('Caught exception: ', $e->getMessage());
+  }
 }
 
 if($GLOBALS['ENV_DEBUG']) echo "Exiting harvest loop.\n";
diff --git a/update_resources/connectors/750.php b/update_resources/connectors/750.php
index 36ebf83..88db964 100755
--- a/update_resources/connectors/750.php
+++ b/update_resources/connectors/750.php
@@ -1,13 +1,6 @@
 <?php
 namespace php_active_record;
-/* execution time: 9 seconds 
-
-                            Mar2014     11May2015
-measurement_or_fact.tab]    [10618]     10312
-occurrence.tab]             [3537]      3435
-taxon.tab]                  [1176]      1141
-
-*/
+/* execution time: 9 seconds */
 
 include_once(dirname(__FILE__) . "/../../config/environment.php");
 require_library('connectors/FEISDataConnector');
@@ -25,4 +18,4 @@ echo "\n elapsed time = " . $elapsed_time_sec . " seconds";
 echo "\n elapsed time = " . $elapsed_time_sec/60 . " minutes";
 echo "\n elapsed time = " . $elapsed_time_sec/60/60 . " hours";
 echo "\n Done processing.\n";
-?>
\ No newline at end of file
+?>
diff --git a/update_resources/connectors/inat.php b/update_resources/connectors/inat.php
index 67fdcce..4e7d6c1 100755
--- a/update_resources/connectors/inat.php
+++ b/update_resources/connectors/inat.php
@@ -9,6 +9,28 @@ $timestart = time_elapsed();
 require_library('connectors/INaturalistAPI');
 $func = new INaturalistAPI();
 $func->generate_link_backs();
+
+/* copy file to Dropbox */
+require_once "vendor/dropbox-sdk-php-1.1.5/lib/Dropbox/autoload.php";
+use \Dropbox as dbx;
+$accessToken = "0L_P2JHHe60AAAAAAAARGn8Au3W0IEmAHbWgHQzSfyP_QMvomhOkuHc-ATnbb23Z";
+$dbxClient = new dbx\Client($accessToken, "PHP-Example/1.0");
+/* $accountInfo = $dbxClient->getAccountInfo(); print_r($accountInfo); */
+$file = "iNat_EOL_object_urls.txt.zip";
+$dropbox_path = "/Public/iNaturalist/";
+$f = fopen(CONTENT_RESOURCE_LOCAL_PATH . $file, "rb");
+if($result = $dbxClient->getMetadata($dropbox_path.$file))
+{
+    print_r($result);
+    $dbxClient->delete($dropbox_path.$file);
+    echo "\nexisting file deleted\n";
+}
+else echo "\nfile does not exist yet\n";
+$result = $dbxClient->uploadFile($dropbox_path.$file, dbx\WriteMode::add(), $f);
+echo "\nfile uploaded\n";
+print_r($result);
+fclose($f);
+
 $elapsed_time_sec = time_elapsed() - $timestart;
 echo "\n\nelapsed time = " . $elapsed_time_sec/60 . " minutes \n";
 echo "elapsed time = " . $elapsed_time_sec/60/60 . " hours \n";
diff --git a/vendor/PHPExcel/Classes/PHPExcel/Reader/Excel5.php b/vendor/PHPExcel/Classes/PHPExcel/Reader/Excel5.php
index fde329a..cac6459 100644
--- a/vendor/PHPExcel/Classes/PHPExcel/Reader/Excel5.php
+++ b/vendor/PHPExcel/Classes/PHPExcel/Reader/Excel5.php
@@ -410,7 +410,6 @@ class PHPExcel_Reader_Excel5 extends PHPExcel_Reader_Abstract implements PHPExce
 			$res = $ole->read($pFilename);
 			return true;
 		} catch (PHPExcel_Exception $e) {
-			debug("PHPExcel_Exception");
 			return false;
 		}
 	}
diff --git a/vendor/namelink/module.php b/vendor/namelink/module.php
index 01f1b79..1ae8ecd 100644
--- a/vendor/namelink/module.php
+++ b/vendor/namelink/module.php
@@ -6,7 +6,7 @@ require_once(dirname(__FILE__) ."/NameTag.php");
 require_once(dirname(__FILE__) ."/NewNamesFinder.php");
 
 /* TaxonFinder */
-define("TAXONFINDER_SOCKET_SERVER", "127.0.0.1");
+define("TAXONFINDER_SOCKET_SERVER", getenv("EOL_HARVEST_HOST"));
 define("TAXONFINDER_SOCKET_PORT",   "1234");
 define("TAXONFINDER_STOP_KEYWORD",  "asdfib3r234");
 
@@ -636,4 +636,4 @@ function junk_parts()
 }
 
 
-?>
\ No newline at end of file
+?>
